#!/usr/bin/env node

// Map ID
const mapArea = 33
const mapNo = 1

// RND is extract from 'Core.swf'
const RND = [3367,28012,6269,26478,24442,27255,28017,3366,6779,7677,7179,28011,24421,27502,3366,7779,24439,27762,6474,7463,28515,5164,6672,28006,27999,27254,7363,6868,13420,6464,7376,28268,6968,7276,29806,28778,27511,7163,25964,7870,29549,31084,7063,7163,7969,6674,7934,6774,6768,27769,7476,7272,28279,30572,6763,27759,7768,27768,7864,28535,27235,7968,7373,27769,27751,3479,27497,6769,28272,7264,7773,6878,6178,7673,6671,6673,26476,6367,7162,28021,7773,6573,27251,27188,7778,27255,27750,7268,6763,27500,6664,7369,25199,31353,25455,7875,7369,7464,7262,6376,7370,27245,3474,7469,28535,28536,6276,30827,31349,7071,30059,26991,6771,6266,6572,7570,6469,27752,28258,7573,7334,6666,6573,27768,7575,28261,25199,6366,6268,7975,7268,7176,27509,6164,7662,6470,6368,7075,30062,3461,27234,26479,7977,6962,28015,27747,27766,28270,28017,27495,28016,6379,28015,29550,25964,27755,28522,7651,6466,29293,26221,24426,7673,6368,6835,31329,26475,7473,6169,6478,27999,6161,27491,6765,7579,6468,26463,31336,6562,7564,6773,3564,7473,7564,30570,6274,6363,6663,7670,7173,27249,7278,28259,7974,6670,7578,6463,7835,26207,25466,6173,27495,6664,6268,7272,24441,29039,26734,6262,7979,24938,6768,27493,7574,3579,6673,27508,28274,6261,26988,6463,6362,6166,26475,6663,27241,7876,28270,6475,6766,31286,28278,28270,28520,27498,31086,7077,27242,6966,26219,7069,28514,27760,6971,27256,7363,27244,3677,6669,6270,7362,6879,6971,27503,6778,7879,7376,6375,27756,6965,7163,7367,6579,7236,7873,30829,6975,6367,28521,26733,7972,30317,6977,6376,27501,27239,30063,28262,6870,6773,3669,6361,7973,27769,6777,28518,27757,27252,6677,27242,6471,6566,27235,31346,7270,6364,6536,7566,6471,6371,28025,29039,30315,29546,27495,6763,7576,6979,31087,27760,7167,7673,6662,5164,6672,28006,27999,27254,7363,6868]

// Procedure 1: Decode
let RND1 = []
;(function () {
  for (let rnd of RND) {
    rndstr = rnd > 10000 ? rnd.toString(16) : rnd.toString()
    RND1.push(rndstr.substr(0, 2))
    RND1.push(rndstr.substr(2, 4))
  }
})()
console.log("RND1", JSON.stringify(RND1))

// Procedure 2: Group
// Format: 33 a b c d 32 j k l
let kfile = []
;(function () {
  let area = 0, file = ''
  for (let rnd of RND1) {
    rnd = parseInt(rnd, 16)
    if (rnd < 90) {
      if (file !== '') {
        area = parseInt(area.toString(16))
        kfile.push([area, file])
        file = ''
      }
      area = rnd
    } else {
      file += String.fromCharCode(rnd)  // 91=a, 92=b, ...
    }
  }
  kfile.push([area, file])  // Seems last item needn't to convert
})()
console.log("kfile", JSON.stringify(kfile))

// Procedure 3: Find
// Find No.`mapNo` of `kfile[i][0] == areaID`, and its file name is `kfile[i][1]`
;(function () {
  let i = 0
  for (let _ of kfile) {
    let area = _[0], file = _[1]
    if (area === mapArea) {
      i += 1
      if (i === mapNo)
        console.log(`${mapArea}-${mapNo}: ${file}`)
    }
  }
})()
